// Code generated by protoc-gen-go.
// source: archivepb.proto
// DO NOT EDIT!

/*
Package archivepb is a generated protocol buffer package.

It is generated from these files:
	archivepb.proto

It has these top-level messages:
	ArchiveItem
	GetArchiveListReq
	GetArchiveListRes
*/
package archivepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ArchiveItem struct {
	FromHost  string `protobuf:"bytes,1,opt,name=from_host,json=fromHost" json:"from_host,omitempty"`
	ItemName  string `protobuf:"bytes,2,opt,name=item_name,json=itemName" json:"item_name,omitempty"`
	ItemUrl   string `protobuf:"bytes,3,opt,name=item_url,json=itemUrl" json:"item_url,omitempty"`
	CollectAt string `protobuf:"bytes,4,opt,name=collect_at,json=collectAt" json:"collect_at,omitempty"`
}

func (m *ArchiveItem) Reset()                    { *m = ArchiveItem{} }
func (m *ArchiveItem) String() string            { return proto.CompactTextString(m) }
func (*ArchiveItem) ProtoMessage()               {}
func (*ArchiveItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ArchiveItem) GetFromHost() string {
	if m != nil {
		return m.FromHost
	}
	return ""
}

func (m *ArchiveItem) GetItemName() string {
	if m != nil {
		return m.ItemName
	}
	return ""
}

func (m *ArchiveItem) GetItemUrl() string {
	if m != nil {
		return m.ItemUrl
	}
	return ""
}

func (m *ArchiveItem) GetCollectAt() string {
	if m != nil {
		return m.CollectAt
	}
	return ""
}

type GetArchiveListReq struct {
	Offset int32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetArchiveListReq) Reset()                    { *m = GetArchiveListReq{} }
func (m *GetArchiveListReq) String() string            { return proto.CompactTextString(m) }
func (*GetArchiveListReq) ProtoMessage()               {}
func (*GetArchiveListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetArchiveListReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetArchiveListReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetArchiveListRes struct {
	ArchiveItems []*ArchiveItem `protobuf:"bytes,1,rep,name=archive_items,json=archiveItems" json:"archive_items,omitempty"`
	TotalCount   int64          `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *GetArchiveListRes) Reset()                    { *m = GetArchiveListRes{} }
func (m *GetArchiveListRes) String() string            { return proto.CompactTextString(m) }
func (*GetArchiveListRes) ProtoMessage()               {}
func (*GetArchiveListRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetArchiveListRes) GetArchiveItems() []*ArchiveItem {
	if m != nil {
		return m.ArchiveItems
	}
	return nil
}

func (m *GetArchiveListRes) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*ArchiveItem)(nil), "archivepb.ArchiveItem")
	proto.RegisterType((*GetArchiveListReq)(nil), "archivepb.GetArchiveListReq")
	proto.RegisterType((*GetArchiveListRes)(nil), "archivepb.GetArchiveListRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoArchive service

type GoArchiveClient interface {
	GetArchiveList(ctx context.Context, in *GetArchiveListReq, opts ...grpc.CallOption) (*GetArchiveListRes, error)
}

type goArchiveClient struct {
	cc *grpc.ClientConn
}

func NewGoArchiveClient(cc *grpc.ClientConn) GoArchiveClient {
	return &goArchiveClient{cc}
}

func (c *goArchiveClient) GetArchiveList(ctx context.Context, in *GetArchiveListReq, opts ...grpc.CallOption) (*GetArchiveListRes, error) {
	out := new(GetArchiveListRes)
	err := grpc.Invoke(ctx, "/archivepb.go_archive/GetArchiveList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoArchive service

type GoArchiveServer interface {
	GetArchiveList(context.Context, *GetArchiveListReq) (*GetArchiveListRes, error)
}

func RegisterGoArchiveServer(s *grpc.Server, srv GoArchiveServer) {
	s.RegisterService(&_GoArchive_serviceDesc, srv)
}

func _GoArchive_GetArchiveList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArchiveListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoArchiveServer).GetArchiveList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archivepb.go_archive/GetArchiveList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoArchiveServer).GetArchiveList(ctx, req.(*GetArchiveListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoArchive_serviceDesc = grpc.ServiceDesc{
	ServiceName: "archivepb.go_archive",
	HandlerType: (*GoArchiveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArchiveList",
			Handler:    _GoArchive_GetArchiveList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "archivepb.proto",
}

func init() { proto.RegisterFile("archivepb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcb, 0x4b, 0xf3, 0x40,
	0x14, 0xc5, 0xbf, 0x7c, 0x31, 0xd5, 0xdc, 0xf8, 0xc0, 0x8b, 0x94, 0xf8, 0xc2, 0x92, 0x55, 0x57,
	0x5d, 0xd4, 0xa5, 0xab, 0xe0, 0x42, 0x05, 0xe9, 0x62, 0xc0, 0x9d, 0x30, 0x4c, 0xc3, 0xc4, 0x06,
	0x66, 0x7a, 0xdb, 0xcc, 0xad, 0x7b, 0xff, 0x73, 0x99, 0x49, 0xb0, 0x95, 0x82, 0xbb, 0x9c, 0xdf,
	0x21, 0x73, 0xce, 0x99, 0x81, 0x33, 0xd5, 0x56, 0x8b, 0xe6, 0x53, 0xaf, 0xe6, 0x93, 0x55, 0x4b,
	0x4c, 0x98, 0xfe, 0x80, 0xe2, 0x2b, 0x82, 0xac, 0xec, 0xd4, 0x0b, 0x6b, 0x8b, 0xd7, 0x90, 0xd6,
	0x2d, 0x59, 0xb9, 0x20, 0xc7, 0x79, 0x34, 0x8a, 0xc6, 0xa9, 0x38, 0xf2, 0xe0, 0x99, 0x1c, 0x7b,
	0xb3, 0x61, 0x6d, 0xe5, 0x52, 0x59, 0x9d, 0xff, 0xef, 0x4c, 0x0f, 0x66, 0xca, 0x6a, 0xbc, 0x84,
	0xf0, 0x2d, 0x37, 0xad, 0xc9, 0xe3, 0xe0, 0x1d, 0x7a, 0xfd, 0xd6, 0x1a, 0xbc, 0x05, 0xa8, 0xc8,
	0x18, 0x5d, 0xb1, 0x54, 0x9c, 0x1f, 0x04, 0x33, 0xed, 0x49, 0xc9, 0x45, 0x09, 0xe7, 0x4f, 0x9a,
	0xfb, 0x16, 0xaf, 0x8d, 0x63, 0xa1, 0xd7, 0x38, 0x84, 0x01, 0xd5, 0xb5, 0xd3, 0x5d, 0x8b, 0x44,
	0xf4, 0x0a, 0x2f, 0x20, 0x31, 0x8d, 0x6d, 0x38, 0xe4, 0x27, 0xa2, 0x13, 0xc5, 0x7a, 0xff, 0x08,
	0x87, 0x0f, 0x70, 0xd2, 0x0f, 0x95, 0xbe, 0x89, 0xcb, 0xa3, 0x51, 0x3c, 0xce, 0xa6, 0xc3, 0xc9,
	0xf6, 0x3e, 0x76, 0xa6, 0x8b, 0x63, 0xb5, 0x15, 0x0e, 0xef, 0x20, 0x63, 0x62, 0x65, 0x64, 0x45,
	0x9b, 0x65, 0x97, 0x16, 0x0b, 0x08, 0xe8, 0xd1, 0x93, 0xe9, 0x3b, 0xc0, 0x07, 0xc9, 0xfe, 0x1f,
	0x9c, 0xc1, 0xe9, 0xef, 0x02, 0x78, 0xb3, 0x13, 0xb3, 0x37, 0xef, 0xea, 0x2f, 0xd7, 0x15, 0xff,
	0xe6, 0x83, 0xf0, 0x52, 0xf7, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xb8, 0x56, 0xf6, 0xbc,
	0x01, 0x00, 0x00,
}
